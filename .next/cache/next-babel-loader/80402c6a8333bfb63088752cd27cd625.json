{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Modal, Button, Header, Image } from 'semantic-ui-react';\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3';\nvar isMetaMask;\n\nvar MMPrompt = /*#__PURE__*/function (_React$Component) {\n  _inherits(MMPrompt, _React$Component);\n\n  var _super = _createSuper(MMPrompt);\n\n  function MMPrompt() {\n    var _this;\n\n    _classCallCheck(this, MMPrompt);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      modalOpen: true,\n      visibility: 'hidden'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOpen\", function () {\n      _this.setState({\n        modalOpen: true\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(MMPrompt, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.currentProvider.isMetaMask;\n\n              case 2:\n                isMetaMask = _context.sent;\n\n                if (isMetaMask || this.props.visible === false) {\n                  this.handleClose();\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Modal, {\n        size: \"small\",\n        open: this.state.modalOpen,\n        trigger: this.props.trigger,\n        onClose: this.handleClose,\n        onOpen: this.handleOpen\n      }, __jsx(Header, {\n        as: \"h3\"\n      }, __jsx(Image, {\n        src: \"/static/images/download-metamask-dark.png\",\n        as: \"a\",\n        href: \"https://metamask.io/\",\n        target: \"_blank\"\n      }), \"Use MetaMask to interact with the contract\"), __jsx(Modal.Content, {\n        image: true,\n        scrolling: true\n      }, __jsx(Image, {\n        size: \"medium\",\n        src: \"/static/images/metamask-network.png\"\n      }), __jsx(Modal.Description, null, __jsx(\"p\", null, \"If you would like to interact with the Crypto Byte contract, you'll need to have\", ' ', __jsx(Link, {\n        route: \"https://metamask.io/\"\n      }, __jsx(\"a\", {\n        target: \"_blank\"\n      }, \" MetaMask\")), ' ', \"installed in your browser.\", __jsx(\"br\", null), \"Then also make sure you're connected to the Rinkeby Test Net.\"))), __jsx(Modal.Actions, null, __jsx(Button, {\n        color: \"green\",\n        inverted: true,\n        onClick: this.handleClose\n      }, \"OK\")));\n    }\n  }]);\n\n  return MMPrompt;\n}(React.Component);\n\nexport default MMPrompt;","map":null,"metadata":{},"sourceType":"module"}