{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Message, Container } from 'semantic-ui-react';\n\nclass Paused extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      visible: true\n    });\n\n    _defineProperty(this, \"handleDismiss\", _e => {\n      this.setState({\n        visible: false\n      });\n      const pausedClosed = new CustomEvent('pausedClosed');\n      dispatchEvent(pausedClosed);\n    });\n  }\n\n  render() {\n    return __jsx(Container, {\n      id: \"pausedmsg\",\n      fluid: true,\n      textAlign: \"center\"\n    }, this.props.isPaused && __jsx(Message, {\n      negative: true,\n      onDismiss: this.handleDismiss,\n      hidden: !this.state.visible,\n      style: {\n        marginTop: this.props.headerHeight\n      },\n      attached: \"bottom\"\n    }, __jsx(Message.Header, null, \"Crypto Byte is currently paused!\"), __jsx(\"p\", null, \"No transactions can be made at the moment.\")));\n  }\n\n}\n\nexport default Paused;","map":null,"metadata":{},"sourceType":"module"}