{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Head from 'next/head';\nimport MMPrompt from '../../components/MMPrompt';\nimport { Button, Header, Visibility, Container, Message, Form, Input, Dropdown } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport cryptoByte from '../../ethereum/cryptoByte';\nimport BigNumber from 'bignumber.js';\nvar dropdownOptions = [{\n  key: 'GCRB',\n  text: 'GCRB (1e+9)',\n  value: '1e+9'\n}, {\n  key: 'MCRB',\n  text: 'MCRB (1e+6)',\n  value: '1e+6'\n}, {\n  key: 'kCRB',\n  text: 'kCRB (1000)',\n  value: '1000'\n}, {\n  key: 'CRB',\n  text: 'CRB (1)',\n  value: '1'\n}, {\n  key: 'mCRB',\n  text: 'mCRB (0.001)',\n  value: '0.001'\n}, {\n  key: 'µCRB',\n  text: 'µCRB (1e-6)',\n  value: '1e-6'\n}, {\n  key: 'nCRB',\n  text: 'nCRB (1e-9)',\n  value: '1e-9'\n}, {\n  key: 'pCRB',\n  text: 'pCRB (1e-12)',\n  value: '1e-12'\n}, {\n  key: 'fCRB',\n  text: 'fCRB (1e-15)',\n  value: '1e-15'\n}, {\n  key: 'aCRB',\n  text: 'aCRB (1e-18)',\n  value: '1e-18'\n}];\nvar headerEl, pausedEl;\nvar decimals, symbol, price, currentAccount;\nvar inUSD, inETH;\n\nvar BuyTokens = /*#__PURE__*/function (_Component) {\n  _inherits(BuyTokens, _Component);\n\n  var _super = _createSuper(BuyTokens);\n\n  function BuyTokens() {\n    var _this;\n\n    _classCallCheck(this, BuyTokens);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      mounted: false,\n      headerHeight: 0,\n      pausedHeight: 0,\n      amount: '',\n      amountErr: false,\n      amountETH: 0,\n      amountUSD: 0,\n      ETHtoUSD: 0,\n      dropdownValue: '1',\n      dropdownKey: 'CRB',\n      msgErr: false,\n      success: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCryptoByteInfo\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return cryptoByte.methods.decimals().call();\n\n            case 2:\n              decimals = _context.sent;\n              _context.next = 5;\n              return cryptoByte.methods.symbol().call();\n\n            case 5:\n              symbol = _context.sent;\n              _context.next = 8;\n              return cryptoByte.methods.tokenPrice().call();\n\n            case 8:\n              price = _context.sent;\n              price = BigNumber(price).div('1e+18');\n              _context.next = 12;\n              return web3.eth.getAccounts();\n\n            case 12:\n              currentAccount = _context.sent[0];\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getETHprice\", function () {\n      fetch(\"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD&api_key=\".concat(process.env.CRYPTOCOMPARE_KEY)).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.t0 = _this;\n                  _context2.next = 3;\n                  return response.json();\n\n                case 3:\n                  _context2.t1 = _context2.sent.USD;\n                  _context2.t2 = {\n                    ETHtoUSD: _context2.t1\n                  };\n\n                  _context2.t0.setState.call(_context2.t0, _context2.t2);\n\n                  if (typeof inETH !== 'undefined') {\n                    _this.setState({\n                      amountUSD: inETH.times(_this.state.ETHtoUSD).toFixed()\n                    });\n                  }\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                msgErr: '',\n                success: false\n              });\n\n              _context3.prev = 1;\n\n              if (!(_this.state.amountErr || _this.state.amount === '')) {\n                _context3.next = 4;\n                break;\n              }\n\n              throw {\n                message: 'Amount must be a positive number.'\n              };\n\n            case 4:\n              if (!(_this.state.amountETH === '0')) {\n                _context3.next = 6;\n                break;\n              }\n\n              throw {\n                message: \"Can't buy that few tokens (you should increase the amount).\"\n              };\n\n            case 6:\n              _context3.next = 8;\n              return cryptoByte.methods.buyToken().send({\n                from: currentAccount,\n                value: web3.utils.toWei(_this.state.amountETH, 'ether')\n              });\n\n            case 8:\n              _this.setState({\n                loading: false,\n                success: true\n              });\n\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n\n              _this.setState({\n                loading: false,\n                msgErr: _context3.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 11]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"setAmountETH\", function (input) {\n      if (input !== '') {\n        input = BigNumber(input).times(BigNumber(_this.state.dropdownValue));\n        inETH = input.times(price);\n\n        try {\n          web3.utils.toWei(inETH.toFixed(), 'ether');\n        } catch (_unused) {\n          inETH = BigNumber(inETH.toFixed().split('.')[0] + '.' + inETH.toFixed().split('.')[1].substring(0, 18));\n        }\n\n        inUSD = inETH.times(_this.state.ETHtoUSD);\n\n        _this.setState({\n          amountETH: inETH.toFixed(),\n          amountUSD: inUSD.toFixed()\n        });\n      } else {\n        _this.setState({\n          amountETH: 0,\n          amountUSD: 0\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateContent\", function () {\n      _this.setState({\n        headerHeight: headerEl.clientHeight\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(BuyTokens, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        var headerVisible;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                headerEl = document.getElementById('header');\n                headerVisible = setInterval(function () {\n                  if (headerEl.style.visibility === 'visible') {\n                    pausedEl = document.getElementById('pausedmsg');\n\n                    _this2.setState({\n                      transVisible: true,\n                      headerHeight: headerEl.clientHeight,\n                      pausedHeight: pausedEl.clientHeight\n                    });\n\n                    clearInterval(headerVisible);\n                  }\n                }, 100);\n                window.addEventListener('pausedClosed', function (_e) {\n                  _this2.setState({\n                    pausedHeight: 0\n                  });\n                });\n                _context4.next = 5;\n                return this.getETHprice();\n\n              case 5:\n                setInterval(this.getETHprice, 30000);\n                _context4.next = 8;\n                return this.getCryptoByteInfo();\n\n              case 8:\n                this.setState({\n                  mounted: true\n                });\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(Layout, {\n        mounted: true\n      }, __jsx(Head, null, __jsx(\"title\", null, \"Crypto Byte - Buy tokens\")), __jsx(MMPrompt, null), __jsx(Visibility, {\n        onUpdate: this.updateContent\n      }, __jsx(Container, {\n        style: {\n          marginTop: !this.state.pausedHeight ? this.state.headerHeight + 20 : 20\n        }\n      }, __jsx(Header, {\n        as: \"h3\",\n        inverted: true,\n        dividing: true,\n        textAlign: \"center\"\n      }, \"You can buy Crypto Byte tokens (CRB) with ETH with the form below.\"), __jsx(Form, {\n        inverted: true,\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Input, {\n        label: \"Amount of CRB to buy\",\n        error: this.state.amountErr\n      }, __jsx(Input, {\n        placeholder: \"123.456\",\n        label: __jsx(Dropdown, {\n          scrolling: true,\n          value: this.state.dropdownValue,\n          options: dropdownOptions,\n          onChange: /*#__PURE__*/function () {\n            var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_event, data) {\n              return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return _this3.setState({\n                        dropdownValue: data.value,\n                        dropdownKey: data.options.find(function (o) {\n                          return o.value === data.value;\n                        }).key\n                      });\n\n                    case 2:\n                      _this3.setAmountETH(_this3.state.amount);\n\n                    case 3:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5);\n            }));\n\n            return function (_x2, _x3) {\n              return _ref4.apply(this, arguments);\n            };\n          }()\n        }),\n        labelPosition: \"right\",\n        value: this.state.amount,\n        onChange: function onChange(event) {\n          _this3.setState({\n            amount: event.target.value\n          });\n\n          if ((isNaN(event.target.value) || parseFloat(event.target.value) < 0 || event.target.value.substring(0, 2) === '0x') && !(event.target.value === '')) {\n            _this3.setState({\n              amountErr: {\n                content: 'The amount must be a positive number.'\n              },\n              amountETH: 0,\n              amountUSD: 0\n            });\n          } else {\n            _this3.setState({\n              amountErr: false\n            });\n\n            _this3.setAmountETH(event.target.value);\n          }\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null), __jsx(Message, null, \"This purchase is going to cost you \", this.state.amountETH, ' ', \"ETH (~ $\", this.state.amountUSD, \").\"))), this.state.amount && !this.state.amountErr && __jsx(Message, {\n        info: true\n      }, __jsx(\"p\", null, \"You are going to buy\", ' ', __jsx(\"b\", null, this.state.amount, \" \", this.state.dropdownKey), ' ', \"with this transaction.\")), this.state.msgErr && __jsx(\"div\", null, __jsx(Message, {\n        negative: true,\n        compact: true\n      }, __jsx(Message.Header, null, \"Something went wrong!\"), this.state.msgErr), __jsx(\"br\", null)), this.state.success && __jsx(\"div\", null, __jsx(Message, {\n        positive: true,\n        compact: true\n      }, __jsx(Message.Header, null, \"Transaction complete!\"), \"The transaction was completed successfully.\"), __jsx(\"br\", null)), __jsx(Button, {\n        type: \"submit\",\n        loading: this.state.loading,\n        disabled: this.state.loading\n      }, \"Purchase\")))));\n    }\n  }]);\n\n  return BuyTokens;\n}(Component);\n\nexport default BuyTokens;","map":null,"metadata":{},"sourceType":"module"}