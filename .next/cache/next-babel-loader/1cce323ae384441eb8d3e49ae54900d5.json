{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Modal, Button, Header, Image } from 'semantic-ui-react';\nimport { Link } from '../routes';\nimport web3 from '../ethereum/web3';\nlet isMetaMask;\n\nclass MMPrompt extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      modalOpen: true,\n      visibility: 'hidden'\n    });\n\n    _defineProperty(this, \"handleClose\", () => {\n      this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(this, \"handleOpen\", () => {\n      this.setState({\n        modalOpen: true\n      });\n    });\n  }\n\n  async componentDidMount() {\n    isMetaMask = await web3.currentProvider.isMetaMask;\n\n    if (isMetaMask || this.props.visible === false) {\n      this.handleClose();\n    }\n  }\n\n  render() {\n    return __jsx(Modal, {\n      size: \"small\",\n      open: this.state.modalOpen,\n      trigger: this.props.trigger,\n      onClose: this.handleClose,\n      onOpen: this.handleOpen\n    }, __jsx(Header, {\n      as: \"h3\"\n    }, __jsx(Image, {\n      src: \"/static/images/download-metamask-dark.png\",\n      as: \"a\",\n      href: \"https://metamask.io/\",\n      target: \"_blank\"\n    }), \"Use MetaMask to interact with the contract\"), __jsx(Modal.Content, {\n      image: true,\n      scrolling: true\n    }, __jsx(Image, {\n      size: \"medium\",\n      src: \"/static/images/metamask-network.png\"\n    }), __jsx(Modal.Description, null, __jsx(\"p\", null, \"If you would like to interact with the Crypto Byte contract, you'll need to have\", ' ', __jsx(Link, {\n      route: \"https://metamask.io/\"\n    }, __jsx(\"a\", {\n      target: \"_blank\"\n    }, \" MetaMask\")), ' ', \"installed in your browser.\", __jsx(\"br\", null), \"Then also make sure you're connected to the Rinkeby Test Net.\"))), __jsx(Modal.Actions, null, __jsx(Button, {\n      color: \"green\",\n      inverted: true,\n      onClick: this.handleClose\n    }, \"OK\")));\n  }\n\n}\n\nexport default MMPrompt;","map":{"version":3,"sources":["C:/Users/Tim/Desktop/CryptoByte-new/components/MMPrompt.js"],"names":["React","Modal","Button","Header","Image","Link","web3","isMetaMask","MMPrompt","Component","modalOpen","visibility","setState","componentDidMount","currentProvider","props","visible","handleClose","render","state","trigger","handleOpen"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,mBAA7C;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,IAAIC,UAAJ;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,UAAU,EAAE;AAFN,KAD6B;;AAAA,yCAavB,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAfoC;;AAAA,wCAgBxB,MAAM;AACjB,WAAKE,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAlBoC;AAAA;;AAMrC,QAAMG,iBAAN,GAA0B;AACxBN,IAAAA,UAAU,GAAG,MAAMD,IAAI,CAACQ,eAAL,CAAqBP,UAAxC;;AACA,QAAIA,UAAU,IAAI,KAAKQ,KAAL,CAAWC,OAAX,KAAuB,KAAzC,EAAgD;AAC9C,WAAKC,WAAL;AACD;AACF;;AASDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWT,SAFnB;AAGE,MAAA,OAAO,EAAE,KAAKK,KAAL,CAAWK,OAHtB;AAIE,MAAA,OAAO,EAAE,KAAKH,WAJhB;AAKE,MAAA,MAAM,EAAE,KAAKI;AALf,OAOE,MAAC,MAAD;AAAQ,MAAA,EAAE,EAAC;AAAX,OACE,MAAC,KAAD;AACE,MAAA,GAAG,EAAC,2CADN;AAEE,MAAA,EAAE,EAAC,GAFL;AAGE,MAAA,IAAI,EAAC,sBAHP;AAIE,MAAA,MAAM,EAAC;AAJT,MADF,+CAPF,EAgBE,MAAC,KAAD,CAAO,OAAP;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,SAAS;AAA9B,OACE,MAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,GAAG,EAAC;AAAzB,MADF,EAEE,MAAC,KAAD,CAAO,WAAP,QACE,qGAEsB,GAFtB,EAGE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ,OACE;AAAG,MAAA,MAAM,EAAC;AAAV,mBADF,CAHF,EAKU,GALV,gCAOE,iBAPF,kEADF,CAFF,CAhBF,EA+BE,MAAC,KAAD,CAAO,OAAP,QACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,QAAQ,MAA9B;AAA+B,MAAA,OAAO,EAAE,KAAKJ;AAA7C,YADF,CA/BF,CADF;AAuCD;;AA5DoC;;AA+DvC,eAAeT,QAAf","sourcesContent":["import React from 'react';\r\nimport { Modal, Button, Header, Image } from 'semantic-ui-react';\r\nimport { Link } from '../routes';\r\nimport web3 from '../ethereum/web3';\r\n\r\nlet isMetaMask;\r\n\r\nclass MMPrompt extends React.Component {\r\n  state = {\r\n    modalOpen: true,\r\n    visibility: 'hidden',\r\n  };\r\n\r\n  async componentDidMount() {\r\n    isMetaMask = await web3.currentProvider.isMetaMask;\r\n    if (isMetaMask || this.props.visible === false) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({ modalOpen: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        size=\"small\"\r\n        open={this.state.modalOpen}\r\n        trigger={this.props.trigger}\r\n        onClose={this.handleClose}\r\n        onOpen={this.handleOpen}\r\n      >\r\n        <Header as=\"h3\">\r\n          <Image\r\n            src=\"/static/images/download-metamask-dark.png\"\r\n            as=\"a\"\r\n            href=\"https://metamask.io/\"\r\n            target=\"_blank\"\r\n          />\r\n          Use MetaMask to interact with the contract\r\n        </Header>\r\n        <Modal.Content image scrolling>\r\n          <Image size=\"medium\" src=\"/static/images/metamask-network.png\" />\r\n          <Modal.Description>\r\n            <p>\r\n              If you would like to interact with the Crypto Byte contract,\r\n              you'll need to have{' '}\r\n              <Link route=\"https://metamask.io/\">\r\n                <a target=\"_blank\"> MetaMask</a>\r\n              </Link>{' '}\r\n              installed in your browser.\r\n              <br />\r\n              Then also make sure you're connected to the Rinkeby Test Net.\r\n            </p>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"green\" inverted onClick={this.handleClose}>\r\n            OK\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MMPrompt;\r\n"]},"metadata":{},"sourceType":"module"}