{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Header, Form, Button, Input, Message } from 'semantic-ui-react';\nimport cryptoByte721 from '../../ethereum/cryptoByte721';\nimport MMPrompt from '../../components/MMPrompt';\nimport web3 from '../../ethereum/web3';\nlet currentAccount, headerEl, pausedEl;\n\nclass GiftToken extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      mounted: false,\n      headerHeight: 0,\n      pausedHeight: 0,\n      recAddr: '',\n      recAddrErr: false,\n      msgErr: false,\n      loading: false,\n      success: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        msgErr: ''\n      });\n\n      try {\n        if (this.state.recAddrErr || this.state.recAddr === '') {\n          throw {\n            message: 'Invalid receiver address.'\n          };\n        }\n\n        await cryptoByte721.methods.safeTransferFrom(currentAccount, this.state.recAddr, this.props.id).send({\n          from: currentAccount\n        });\n        this.setState({\n          loading: false,\n          success: true\n        });\n      } catch (err) {\n        this.setState({\n          loading: false,\n          msgErr: err.message\n        });\n      }\n    });\n  }\n\n  static async getInitialProps({\n    query\n  }) {\n    return {\n      id: query.id\n    };\n  }\n\n  async componentDidMount() {\n    currentAccount = (await web3.eth.getAccounts())[0];\n    headerEl = document.getElementById('header');\n    const headerVisible = setInterval(() => {\n      if (headerEl.style.visibility === 'visible') {\n        pausedEl = document.getElementById('pausedmsg');\n        this.setState({\n          headerHeight: headerEl.clientHeight,\n          pausedHeight: pausedEl.clientHeight\n        });\n        clearInterval(headerVisible);\n      }\n    }, 100);\n    window.addEventListener('pausedClosed', _e => {\n      this.setState({\n        pausedHeight: 0\n      });\n    });\n    this.setState({\n      mounted: true\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      mounted: true\n    }, __jsx(MMPrompt, null), __jsx(Container, {\n      style: {\n        marginTop: !this.state.pausedHeight ? this.state.headerHeight + 20 : 20\n      }\n    }, __jsx(Header, {\n      as: \"h3\",\n      inverted: true,\n      dividing: true,\n      textAlign: \"center\"\n    }, \"You can gift your ERC721 tokens with the form below.\"), __jsx(Form, {\n      inverted: true,\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Group, {\n      widths: \"equal\"\n    }, __jsx(Form.Input, {\n      error: this.state.recAddrErr,\n      label: \"Receiver address\"\n    }, __jsx(Input, {\n      placeholder: \"0x0000000000000000000000000000000000000000\",\n      value: this.state.recAddr,\n      onChange: event => {\n        this.setState({\n          recAddr: event.target.value\n        });\n\n        if (!event.target.value.match(/^(0x||0X)[a-fA-F0-9]{40}$/g) && !(event.target.value === '')) {\n          this.setState({\n            recAddrErr: {\n              content: 'Please enter a valid address.'\n            }\n          });\n        } else {\n          this.setState({\n            recAddrErr: false\n          });\n        }\n      }\n    }))), __jsx(Message, {\n      info: true\n    }, __jsx(\"p\", null, \"This is going to transact the ERC721 token with\", ' ', __jsx(\"b\", null, \"ID \", this.props.id), \" from your account.\", __jsx(\"br\", null), \"Once the transaction is done, you can't get your token back. To avoid any inconveniences, please double check the receiver address (and you should also \", __jsx(\"b\", null, \"never\"), \" hand type addresses).\")), this.state.msgErr && __jsx(\"div\", null, __jsx(Message, {\n      negative: true,\n      compact: true\n    }, __jsx(Message.Header, null, \"Something went wrong!\"), this.state.msgErr), __jsx(\"br\", null)), this.state.success && __jsx(\"div\", null, __jsx(Message, {\n      positive: true,\n      compact: true\n    }, __jsx(Message.Header, null, \"Transaction complete!\"), \"The transaction was completed successfully.\"), __jsx(\"br\", null)), __jsx(Button, {\n      type: \"submit\",\n      loading: this.state.loading,\n      disabled: this.state.loading\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default GiftToken;","map":null,"metadata":{},"sourceType":"module"}