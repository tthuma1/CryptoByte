{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nvar web3;\n\nif (true && typeof window.web3 !== 'undefined' && window.web3.currentProvider.networkVersion === process.env.NETWORK_VERSION) {\n  web3 = new Web3(window.web3.currentProvider);\n\n  _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return ethereum.enable();\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 5]]);\n  }))();\n} else {\n  var provider = new Web3.providers.HttpProvider(process.env.INFURA_ENDPOINT);\n  web3 = new Web3(provider);\n}\n\nexport default web3;","map":{"version":3,"sources":["C:/Users/Tim/Desktop/CryptoByte-new/ethereum/web3.js"],"names":["Web3","web3","window","currentProvider","networkVersion","process","env","NETWORK_VERSION","ethereum","enable","console","log","provider","providers","HttpProvider","INFURA_ENDPOINT"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,IAAJ;;AAEA,IACE,QACA,OAAOC,MAAM,CAACD,IAAd,KAAuB,WADvB,IAEAC,MAAM,CAACD,IAAP,CAAYE,eAAZ,CAA4BC,cAA5B,KAA+CC,OAAO,CAACC,GAAR,CAAYC,eAH7D,EAIE;AACAN,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYE,eAArB,CAAP;;AACA,2DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGSK,QAAQ,CAACC,MAAT,EAHT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKGC,YAAAA,OAAO,CAACC,GAAR;;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;AAQD,CAdD,MAcO;AACL,MAAMC,QAAQ,GAAG,IAAIZ,IAAI,CAACa,SAAL,CAAeC,YAAnB,CAAgCT,OAAO,CAACC,GAAR,CAAYS,eAA5C,CAAjB;AAEAd,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASY,QAAT,CAAP;AACD;;AAED,eAAeX,IAAf","sourcesContent":["import Web3 from 'web3';\r\n\r\nlet web3;\r\n\r\nif (\r\n  typeof window !== 'undefined' &&\r\n  typeof window.web3 !== 'undefined' &&\r\n  window.web3.currentProvider.networkVersion === process.env.NETWORK_VERSION\r\n) {\r\n  web3 = new Web3(window.web3.currentProvider);\r\n  (async () => {\r\n    try {\r\n      // Request account access if needed\r\n      await ethereum.enable();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  })();\r\n} else {\r\n  const provider = new Web3.providers.HttpProvider(process.env.INFURA_ENDPOINT);\r\n\r\n  web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;\r\n"]},"metadata":{},"sourceType":"module"}