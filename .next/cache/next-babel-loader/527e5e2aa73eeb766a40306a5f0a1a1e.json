{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Menu, Dropdown } from 'semantic-ui-react';\nimport { Link } from '../routes';\nimport cryptoByte from '../ethereum/cryptoByte';\nimport web3 from '../ethereum/web3';\nimport Paused from '../components/Paused';\nlet currentAccount, height, isPaused;\n\nclass Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isAdmin: 'none',\n      visibleFull: 'hidden',\n      pausedMounted: false\n    });\n  }\n\n  async componentDidMount() {\n    currentAccount = (await web3.eth.getAccounts())[0];\n\n    if ((await web3.eth.net.getNetworkType()) === process.env.NETWORK_TYPE && typeof currentAccount !== 'undefined') {\n      const isMinter = await cryptoByte.methods.isMinter(currentAccount).call();\n      const isPauser = await cryptoByte.methods.isPauser(currentAccount).call();\n\n      if (isMinter || isPauser) {\n        this.setState({\n          isAdmin: 'flex'\n        });\n      }\n    }\n\n    isPaused = await cryptoByte.methods.paused().call();\n    const interval = setInterval(() => {\n      if (this.props.mounted == true) {\n        clearInterval(interval);\n        this.props.updateState();\n        this.setState({\n          visibleFull: 'visible'\n        });\n      }\n    }, 100);\n    height = document.getElementById('header').clientHeight;\n    window.addEventListener('resize', () => {\n      height = document.getElementById('header').clientHeight;\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, this.state.visibleFull === 'visible' && __jsx(Paused, {\n      headerHeight: height,\n      isPaused: isPaused\n    }), __jsx(Menu, {\n      stackable: true,\n      inverted: true,\n      fixed: \"top\",\n      id: \"header\",\n      style: {\n        visibility: this.state.visibleFull\n      }\n    }, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, __jsx(\"img\", {\n      src: \"/static/favicon.ico\"\n    }))), __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, \"Home\")), __jsx(Dropdown, {\n      item: true,\n      text: \"Collectible Tokens\"\n    }, __jsx(Dropdown.Menu, null, __jsx(Link, {\n      href: \"/tokens\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, \"All Tokens\")), __jsx(Link, {\n      href: `/tokens/${currentAccount}`\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, \"My Tokens\")), __jsx(Link, {\n      href: \"/buy_tokens/721\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, \"Buy New Tokens\")))), __jsx(Menu.Menu, {\n      position: \"right\",\n      style: {\n        backgroundColor: '#444444',\n        display: this.state.isAdmin\n      }\n    }, __jsx(Link, {\n      route: \"/\"\n    }, __jsx(\"a\", {\n      className: \"item\"\n    }, \"Admin Page\")))));\n  }\n\n}\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}