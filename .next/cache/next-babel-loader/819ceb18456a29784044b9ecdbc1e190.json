{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Link } from '../../routes';\nimport Head from 'next/head';\nimport { Button, Header, Visibility, Container, Transition, Table, Grid, Loader, Segment, Message } from 'semantic-ui-react';\nimport MMPrompt from '../../components/MMPrompt';\nimport web3 from '../../ethereum/web3';\nimport cryptoByte from '../../ethereum/cryptoByte';\nvar headerEl, pausedEl, isOwner, isValidAccount;\nvar decimals, symbol, balance;\nvar allowances = {};\nvar allowances2 = {};\n\nvar AccountIndex = /*#__PURE__*/function (_Component) {\n  _inherits(AccountIndex, _Component);\n\n  var _super = _createSuper(AccountIndex);\n\n  function AccountIndex() {\n    var _this;\n\n    _classCallCheck(this, AccountIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      mounted: false,\n      transVisible: false,\n      headerHeight: 0,\n      pausedHeight: 0,\n      allowancesLoaded: false,\n      allowancesLoaded2: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAccountInfo\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var MMAddress;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return cryptoByte.methods.decimals().call();\n\n            case 2:\n              decimals = _context.sent;\n              _context.next = 5;\n              return cryptoByte.methods.symbol().call();\n\n            case 5:\n              symbol = _context.sent;\n\n              if (typeof _this.props.address !== 'undefined') {\n                isValidAccount = !!_this.props.address.match(/^0x[a-fA-F0-9]{40}$/g);\n              }\n\n              if (!isValidAccount) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 10;\n              return cryptoByte.methods.balanceOf(_this.props.address).call();\n\n            case 10:\n              balance = _context.sent;\n\n            case 11:\n              _context.next = 13;\n              return web3.eth.getAccounts();\n\n            case 13:\n              MMAddress = _context.sent[0];\n\n              if (MMAddress === _this.props.address) {\n                isOwner = true;\n              }\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getAllowanceInfo\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var events, i, _i, _Object$keys, key;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!isValidAccount) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 3;\n              return cryptoByte.getPastEvents('Approval', {\n                fromBlock: 0,\n                toBlock: 'latest',\n                filter: {\n                  spender: _this.props.address\n                }\n              });\n\n            case 3:\n              events = _context2.sent;\n              i = 0;\n\n            case 5:\n              if (!(i < events.length)) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.next = 8;\n              return cryptoByte.methods.allowance(events[i].returnValues.owner, _this.props.address).call();\n\n            case 8:\n              allowances[events[i].returnValues.owner] = _context2.sent;\n\n            case 9:\n              i++;\n              _context2.next = 5;\n              break;\n\n            case 12:\n              for (_i = 0, _Object$keys = Object.keys(allowances); _i < _Object$keys.length; _i++) {\n                key = _Object$keys[_i];\n\n                if (allowances[key] === '0') {\n                  delete allowances[key];\n                }\n              }\n\n              _this.setState({\n                allowancesLoaded: true\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getAllowanceInfo2\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var events, i, _i2, _Object$keys2, key;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!isValidAccount) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 3;\n              return cryptoByte.getPastEvents('Approval', {\n                fromBlock: 0,\n                toBlock: 'latest',\n                filter: {\n                  owner: _this.props.address\n                }\n              });\n\n            case 3:\n              events = _context3.sent;\n              i = 0;\n\n            case 5:\n              if (!(i < events.length)) {\n                _context3.next = 12;\n                break;\n              }\n\n              _context3.next = 8;\n              return cryptoByte.methods.allowance(_this.props.address, events[i].returnValues.spender).call();\n\n            case 8:\n              allowances2[events[i].returnValues.spender] = _context3.sent;\n\n            case 9:\n              i++;\n              _context3.next = 5;\n              break;\n\n            case 12:\n              for (_i2 = 0, _Object$keys2 = Object.keys(allowances2); _i2 < _Object$keys2.length; _i2++) {\n                key = _Object$keys2[_i2];\n\n                if (allowances2[key] === '0') {\n                  delete allowances2[key];\n                }\n              }\n\n              _this.setState({\n                allowancesLoaded2: true\n              });\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderAllowances\", function () {\n      var items = [];\n\n      for (var key in allowances) {\n        items.push(__jsx(Table.Row, {\n          key: key\n        }, __jsx(Table.Cell, {\n          style: {\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis'\n          }\n        }, __jsx(Link, {\n          href: \"/account/\".concat(key)\n        }, __jsx(\"a\", {\n          title: key\n        }, key))), __jsx(Table.Cell, {\n          title: allowances[key] / Math.pow(10, decimals)\n        }, (allowances[key] / Math.pow(10, decimals)).toLocaleString('en-US') + ' ' + symbol)));\n      }\n\n      return items.length > 0 ? __jsx(Table.Body, null, items) : __jsx(Table.Body, null, __jsx(Table.Row, null, __jsx(Table.Cell, {\n        colSpan: \"2\"\n      }, \"Looks like nobody allows you any \", symbol, \".\")));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderAllowances2\", function () {\n      var items = [];\n\n      for (var key in allowances2) {\n        items.push(__jsx(Table.Row, {\n          key: key\n        }, __jsx(Table.Cell, {\n          style: {\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis'\n          }\n        }, __jsx(Link, {\n          href: \"/account/\".concat(key)\n        }, __jsx(\"a\", {\n          title: key\n        }, key))), __jsx(Table.Cell, {\n          title: allowances2[key] / Math.pow(10, decimals)\n        }, (allowances2[key] / Math.pow(10, decimals)).toLocaleString('en-US') + ' ' + symbol)));\n      }\n\n      return items.length > 0 ? __jsx(Table.Body, null, items) : __jsx(Table.Body, null, __jsx(Table.Row, null, __jsx(Table.Cell, {\n        colSpan: \"2\"\n      }, \"Looks like you don't allow anyone any \", symbol, \".\")));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateContent\", function () {\n      _this.setState({\n        headerHeight: headerEl.clientHeight\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(AccountIndex, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        var headerVisible;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                headerEl = document.getElementById('header');\n                headerVisible = setInterval(function () {\n                  if (headerEl.style.visibility === 'visible') {\n                    pausedEl = document.getElementById('pausedmsg');\n\n                    _this2.setState({\n                      transVisible: true,\n                      headerHeight: headerEl.clientHeight,\n                      pausedHeight: pausedEl.clientHeight\n                    });\n\n                    clearInterval(headerVisible);\n                  }\n                }, 100);\n                _context4.next = 4;\n                return this.getAccountInfo();\n\n              case 4:\n                window.addEventListener('pausedClosed', function (_e) {\n                  _this2.setState({\n                    pausedHeight: 0\n                  });\n                });\n                this.setState({\n                  mounted: true\n                });\n                _context4.next = 8;\n                return this.getAllowanceInfo();\n\n              case 8:\n                _context4.next = 10;\n                return this.getAllowanceInfo2();\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        mounted: this.state.mounted\n      }, __jsx(Head, null, __jsx(\"title\", null, \"My Account - \", this.props.address)), __jsx(MMPrompt, null), __jsx(Visibility, {\n        onUpdate: this.updateContent\n      }, __jsx(Transition, {\n        visible: this.state.transVisible,\n        animation: \"slide down\",\n        duration: 500\n      }, __jsx(Container, {\n        textAlign: \"center\",\n        style: {\n          marginTop: !this.state.pausedHeight ? this.state.headerHeight + 20 : 20\n        }\n      }, isValidAccount ? __jsx(\"div\", null, __jsx(Header, {\n        id: \"style-7\",\n        as: \"h2\",\n        dividing: true,\n        inverted: true,\n        style: {\n          overflow: 'auto'\n        }\n      }, __jsx(\"p\", {\n        style: {\n          color: '#E8E8E8'\n        }\n      }, \"You're looking at information for account\"), '\\n', this.props.address), __jsx(Grid, {\n        stackable: true,\n        divided: true,\n        inverted: true\n      }, __jsx(Grid.Row, {\n        columns: 3\n      }, __jsx(Grid.Column, null, __jsx(Table, {\n        unstackable: true\n      }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, {\n        colSpan: \"2\"\n      }, \"Overview\"))), __jsx(Table.Body, null, __jsx(Table.Row, null, __jsx(Table.Cell, null, \"Balance: \"), __jsx(Table.Cell, {\n        title: balance / Math.pow(10, decimals)\n      }, (balance / Math.pow(10, decimals)).toLocaleString('en-US'), ' ' + symbol))))), __jsx(Grid.Column, null, __jsx(Table, {\n        unstackable: true,\n        inverted: true,\n        striped: true,\n        celled: true,\n        fixed: true\n      }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, {\n        textAlign: \"center\",\n        colSpan: \"2\"\n      }, \"List of allowances\")), __jsx(Table.Row, null, __jsx(Table.HeaderCell, {\n        colSpan: \"2\"\n      }, \"Allowed \", symbol, \" by:\"))), this.state.allowancesLoaded ? this.renderAllowances() : __jsx(Table.Body, null, __jsx(Table.Row, null, __jsx(Table.Cell, {\n        colSpan: \"2\"\n      }, __jsx(Loader, {\n        active: true,\n        inline: \"centered\",\n        inverted: true\n      })))), __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, {\n        colSpan: \"2\"\n      }, \"Allows \", symbol, \" to:\"))), this.state.allowancesLoaded2 ? this.renderAllowances2() : __jsx(Table.Body, null, __jsx(Table.Row, null, __jsx(Table.Cell, {\n        colSpan: \"2\"\n      }, __jsx(Loader, {\n        active: true,\n        inline: \"centered\",\n        inverted: true\n      })))))), isOwner && __jsx(Grid.Column, {\n        textAlign: \"left\"\n      }, __jsx(Segment, {\n        inverted: true,\n        style: {\n          backgroundColor: 'rgba(0, 0, 0, 0)',\n          padding: '0'\n        }\n      }, __jsx(Header, {\n        as: \"h4\"\n      }, \"Use the buttons below to interact with the contract.\"), \"Tranfer tokens from your account to another:\", __jsx(\"br\", null), __jsx(Link, {\n        route: \"/manage/transfer\"\n      }, __jsx(\"a\", null, __jsx(Button, null, \"Transfer\"))), __jsx(\"br\", null), __jsx(\"br\", null), \"Change the amount of tokens, that you allow another account to spend (or approve a new account):\", __jsx(\"br\", null), __jsx(Link, {\n        route: \"/manage/change_allowance\"\n      }, __jsx(\"a\", null, __jsx(Button, null, \"Change Allowance\"))), __jsx(\"br\", null), __jsx(\"br\", null), \"Transfer tokens that you are allowed by another account:\", __jsx(\"br\", null), __jsx(Link, {\n        route: \"/manage/transfer_allowed\"\n      }, __jsx(\"a\", null, __jsx(Button, null, \"Transfer Allowed\"))), __jsx(\"br\", null)))))) : __jsx(\"div\", null, __jsx(Message, {\n        negative: true\n      }, __jsx(Message.Header, null, \"Oops, something went wrong!\"), __jsx(\"p\", null, \"Looks like the account you're searching for doesn't exist.\")), __jsx(Segment, {\n        inverted: true,\n        clearing: true\n      }, \"If you're seeing this message, you most likely aren't logged in your\", ' ', __jsx(Link, {\n        route: \"https://metamask.io/\"\n      }, __jsx(\"a\", {\n        target: \"_blank\"\n      }, \" MetaMask\")), ' ', \"account.\", __jsx(\"br\", null), \"To view MetaMask use instructions, click on this button.\", ' ', __jsx(MMPrompt, {\n        trigger: __jsx(Button, {\n          size: \"small\",\n          compact: true\n        }, \"View Instructions\"),\n        visible: false\n      })))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref4) {\n        var query;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                query = _ref4.query;\n\n                try {\n                  query.address = web3.utils.toChecksumAddress(query.address);\n                } catch (_unused) {}\n\n                return _context5.abrupt(\"return\", {\n                  address: query.address\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return AccountIndex;\n}(Component);\n\nexport default AccountIndex;","map":null,"metadata":{},"sourceType":"module"}